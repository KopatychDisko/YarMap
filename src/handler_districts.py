'''gfa'''
import pandas as pd

from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram import types

from state import Admin

from filter import ChatTypeFilter

from map.map_creator import map_to_html

router_districts = Router()

router_districts.message.filter(
    ChatTypeFilter(chat_type="private")
)

@router_districts.message(Command("start"))
async def start(msg: Message):
    await msg.answer('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç—É –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏, –Ω–∞—á–Ω–∏ —Å –∫–æ–º–∞–Ω–¥—ã /change')

@router_districts.message(Command("cancel"))
async def cancel(msg: Message, state: FSMContext):
    'Cancel all state'
    await state.clear()
    await msg.answer('–•–æ—Ä–æ—à–æ –Ω–∞—á–Ω–µ–º —Å –Ω–∞—á–∞–ª–∞', reply_markup=types.ReplyKeyboardRemove())
    

@router_districts.message(Command("change"))
async def greetings(msg: Message):
    'First'
    kb = [
        [types.KeyboardButton(text="–†–∞–π–æ–Ω")],
        [types.KeyboardButton(text="–ú–µ—Ç–∫–∏")]
    ]
  
    builder = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        row_width=1,
        one_time_keyboard=True,
        input_field_placeholder='–í—ã–±–∏—Ä–∞–π—Ç–µ, —Å —á–µ–º –±—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å?'
        )

    text = '''
        –ß—Ç–æ –±—É–¥–µ–º –º–µ–Ω—è—Ç—å?
    '''
    await msg.answer(text=text, reply_markup=builder)


@router_districts.message(F.text == '–†–∞–π–æ–Ω')
async def district(msg: Message, state: FSMContext):
    '''fad'''
    await state.set_state(state=Admin.district)

    df = pd.read_json('../data/yar_districts.json')

    kb = [[types.KeyboardButton(text=name)] for name in df.index]

    builder = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        row_width=1,
        one_time_keyboard=True,
        input_field_placeholder='–ö–∞–∫–æ–º—É —Ä–∞–π–æ–Ω—ã –±—É–¥–µ–º –ø–∏—Å–∞—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã?'
        )

    await msg.answer('–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–π–æ–Ω–∞:', reply_markup=builder)

  
@router_districts.message(Admin.district)
async def coord(msg: Message, state: FSMContext):
    '''fad'''
    await state.set_data({'name': msg.text})
    await msg.answer('–í–ø–∏—Å—ã–≤–∞–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:')
    await state.set_state(Admin.coord)

@router_districts.message(Admin.coord, F.text.lower() == '–≤—Å–µ')
async def end(msg: Message, state: FSMContext):
    '''fad'''
    await msg.reply_sticker('CAACAgIAAxkBAAIBCGfxUWZsKHKtdCfe-CA9DzshPuV5AAIEYQACoL2BSheQaxkxNRHbNgQ')
    await msg.answer('–†–µ–∞–ª—å–Ω–æ? –¢–æ–≥–¥–∞ —Å–µ–π—á–∞—Å —Å–∫–∏–Ω—É –∫–∞—Ä—Ç—É')
    await state.clear()
    
    map_to_html('../data/yar_districts.json', '../data/map.html')
    
    file = types.FSInputFile('../data/map.html')
    await msg.answer_document(file, caption='–í–æ—Ç –≤–∞—à–∞ –∫–∞—Ä—Ç–∞ üìÑ')
    
@router_districts.message(Admin.coord)
async def data(msg: Message, state: FSMContext):
    '''fad'''
    data = await state.get_data()
    
    df = pd.read_json('../data/yar_districts.json')
    
    coord = [[float(coord) for coord in point.split(', ')] for point in msg.text.splitlines()]
    
    if len(df.loc[data['name'], 'geometry'][0]) == 5:
        df.loc[data['name'], 'geometry'] = [[[]]]
    
    df.loc[data['name'], 'geometry'][0].extend(coord)
    
    if len(df.loc[data['name'], 'geometry'][0][0]) != 2:
        df.loc[data['name'], 'geometry'][0].pop(0)
    
    df.to_json('../data/yar_districts.json')
    
    await msg.answer('–ó–∞–ø–∏—Å–∞–ª! –ï—Å–ª–∏ –±–æ–ª—å—à–µ –Ω–µ—Ç, –Ω–∞–ø–∏—à–∏ –≤—Å–µ, –∏–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ —à–ª–∏ –µ—â–µ')